float torus( vec3 p, vec2 t )
{
  vec2 q = vec2(length(p.xz)-t.x,p.y);
  return length(q)-t.y;
}

float atan2(in float y, in float x)
{
    bool s = (abs(x) > abs(y));
    return mix(3.141592/2.0 - atan(x,y), atan(y,x), s);
}
float toruslink (vec3 v, vec2 tp) {
float val1 = torus(v.xzy*vec3(1.4,1.0,1.), tp)/1.4;
float val2 = torus(v.zxy*vec3(1.4,1.0,1.0)-vec3(0.0, 0.0, 1.5*tp.x), tp)/1.4;
return min(val1, val2);
}

float domain(vec3 v, float t) {
vec2 tp = vec2(4.0, 1.0);
vec3 m = vec3(length(v.xy)-10.0, mod(12.0*atan2(v.x, v.y), 4.0*3.1415)-2.0*3.1415, v.z);
float what = toruslink(m*vec3(1.0,1.0,1.0), tp);
float what2 = toruslink(m*vec3(1.0,-1.0,1.0), tp);
return min(what, what2);
		  }